{"is_source_file": true, "format": "Python", "description": "This is a Python source file defining SQLAlchemy ORM models for a chess backend database, including User and Game tables, database session management, and database initialization functions.", "external_files": ["os"], "external_methods": ["sqlalchemy.create_engine", "sqlalchemy.Column", "sqlalchemy.Integer", "sqlalchemy.String", "sqlalchemy.DateTime", "sqlalchemy.ForeignKey", "sqlalchemy.Boolean", "sqlalchemy.func", "sqlalchemy.Text", "sqlalchemy.orm.declarative_base", "sqlalchemy.orm.sessionmaker", "sqlalchemy.orm.relationship", "os.getenv", "create_engine", "func.now"], "published": ["get_db", "init_db"], "classes": [{"name": "User", "description": "Represents a user in the chess platform with attributes like username, email, passwords, Elo rating, and game statistics."}, {"name": "Game", "description": "Represents a chess game with attributes for player IDs, status, move history, result, timestamps, and whether played against AI."}], "methods": [{"name": "get_db()", "description": "Provides a database session for dependency injection, managing session lifecycle.", "scope": "", "scopeKind": ""}, {"name": "init_db()", "description": "Initializes the database schema by creating all defined tables; intended for development use.", "scope": "", "scopeKind": ""}], "calls": ["create_engine", "sessionmaker", "Base.metadata.create_all", "func.now", "yield db"], "search-terms": ["User ORM model", "Game ORM model", "SQLAlchemy database setup", "chess game database", "get_db function", "init_db function"], "state": 2, "file_id": 6, "knowledge_revision": 23, "git_revision": "d85424e7c48ba77dd0f7d0f0174282e9e01b830d", "revision_history": [{"13": ""}, {"23": "d85424e7c48ba77dd0f7d0f0174282e9e01b830d"}], "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "DATABASE_URL", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^DATABASE_URL = os.getenv(\"CHESS_DB_URL\", \"sqlite:\\/\\/\\/.\\/chess.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Game", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^class Game(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=create_engine(DATABASE_URL, /", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^class User(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    __tablename__ = \"games\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    __tablename__ = \"users\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "black_id", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    black_id = Column(Integer, ForeignKey('users.id'))$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "black_player", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    black_player = relationship(\"User\", foreign_keys=[black_id], back_populates=\"games_black\")$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "created_at", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    created_at = Column(DateTime, server_default=func.now())$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "draws", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    draws = Column(Integer, default=0)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "elo", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    elo = Column(Integer, default=1200)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    email = Column(String, unique=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "ended_at", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    ended_at = Column(DateTime, nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "fen", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    fen = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "games_black", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    games_black = relationship(\"Game\", back_populates=\"black_player\", foreign_keys='Game.black_i/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "games_white", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    games_white = relationship(\"Game\", back_populates=\"white_player\", foreign_keys='Game.white_i/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "hashed_password", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    hashed_password = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "init_db", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^def init_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "is_vs_ai", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    is_vs_ai = Column(Boolean, default=False)$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "losses", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    losses = Column(Integer, default=0)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "moves", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    moves = Column(Text, default=\"\")  # Move history in UCI, separated by commas$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "result", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    result = Column(String, nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "started_at", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    started_at = Column(DateTime, server_default=func.now())$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "status", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    status = Column(String, default=\"waiting\")  # waiting, active, finished$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "username", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    username = Column(String, unique=True, index=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "white_id", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    white_id = Column(Integer, ForeignKey('users.id'))$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "white_player", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    white_player = relationship(\"User\", foreign_keys=[white_id], back_populates=\"games_white\")$/", "language": "Python", "kind": "variable", "scope": "Game", "scopeKind": "class"}, {"_type": "tag", "name": "wins", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/db.py", "pattern": "/^    wins = Column(Integer, default=0)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}], "hash": "202d839057dd7344e62965ace60365dc", "format-version": 4, "code-base-name": "chess_backend", "filename": "chess_backend/src/api/db.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "DATABASE_URL = os.getenv(\"CHESS_DB_URL\", \"sqlite:\\/\\/\\/.\\/chess.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(autocommit=False, autoflush=False, bind=create_engine(DATABASE_URL, /", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"games\"", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = \"users\"", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "black_id = Column(Integer, ForeignKey('users.id'))", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "black_player = relationship(\"User\", foreign_keys=[black_id], back_populates=\"games_black\")", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "created_at = Column(DateTime, server_default=func.now())", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "draws = Column(Integer, default=0)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "elo = Column(Integer, default=1200)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "email = Column(String, unique=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "ended_at = Column(DateTime, nullable=True)", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "fen = Column(String, nullable=False)", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "games_black = relationship(\"Game\", back_populates=\"black_player\", foreign_keys='Game.black_i/", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "games_white = relationship(\"Game\", back_populates=\"white_player\", foreign_keys='Game.white_i/", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "hashed_password = Column(String, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "id = Column(Integer, primary_key=True, index=True)", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "is_vs_ai = Column(Boolean, default=False)", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "losses = Column(Integer, default=0)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "moves = Column(Text, default=\"\")  # Move history in UCI, separated by commas", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "result = Column(String, nullable=True)", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "started_at = Column(DateTime, server_default=func.now())", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "status = Column(String, default=\"waiting\")  # waiting, active, finished", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "username = Column(String, unique=True, index=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "white_id = Column(Integer, ForeignKey('users.id'))", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "white_player = relationship(\"User\", foreign_keys=[white_id], back_populates=\"games_white\")", "scope": "Game", "scopeKind": "class", "description": "unavailable"}, {"name": "wins = Column(Integer, default=0)", "scope": "User", "scopeKind": "class", "description": "unavailable"}]}