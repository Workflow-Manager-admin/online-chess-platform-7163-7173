{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing chess games, including starting new games, making moves, retrieving game details, viewing user game history, and fetching the leaderboard. It uses FastAPI, SQLAlchemy ORM, and chess library functionalities.", "external_files": ["src/api/models", "src/api/db", "src/api/security"], "external_methods": ["get_db", "decode_access_token"], "published": ["start_game", "make_move", "get_game", "my_game_history", "get_leaderboard"], "classes": [], "methods": [{"name": "get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Authenticates user via OAuth token and retrieves user object from database.", "scope": "", "scopeKind": ""}, {"name": "start_game(request: GameStartRequest, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Creates a new chess game, either against AI or waiting for a match with another player.", "scope": "", "scopeKind": ""}, {"name": "make_move(req: MoveRequest, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Executes a move in a specified game, updating game state and checking for game over conditions.", "scope": "", "scopeKind": ""}, {"name": "get_game(game_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Retrieves detailed information about a specific game by ID.", "scope": "", "scopeKind": ""}, {"name": "my_game_history(db: Session = Depends(get_db), current_user: User = Depends(get_current_user))", "description": "Returns a list of all games involving the current user, ordered by recent activity.", "scope": "", "scopeKind": ""}, {"name": "get_leaderboard(db: Session = Depends(get_db), limit: int = 10)", "description": "Fetches the top users ranked by Elo rating, limited by specified number.", "scope": "", "scopeKind": ""}], "calls": ["decode_access_token", "db.query", "db.add", "db.commit", "db.refresh", "db.query(User).filter...", "db.query(Game).filter..."], "search-terms": ["routers_game", "start_game", "make_move", "get_game", "game_history", "leaderboard", "chess", "API endpoints"], "state": 2, "file_id": 9, "knowledge_revision": 19, "git_revision": "", "ctags": [{"_type": "tag", "name": "INITIAL_FEN", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_game.py", "pattern": "/^INITIAL_FEN = chess.STARTING_FEN$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_current_user", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_game.py", "pattern": "/^def get_current_user(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "get_game", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_game.py", "pattern": "/^def get_game(game_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_curre/", "language": "Python", "kind": "function", "signature": "(game_id: int, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "get_leaderboard", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_game.py", "pattern": "/^def get_leaderboard(db: Session = Depends(get_db), limit: int = 10):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), limit: int = 10)"}, {"_type": "tag", "name": "make_move", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_game.py", "pattern": "/^def make_move(req: MoveRequest, db: Session = Depends(get_db), current_user: User = Depends(get_/", "language": "Python", "kind": "function", "signature": "(req: MoveRequest, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "my_game_history", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_game.py", "pattern": "/^def my_game_history(db: Session = Depends(get_db), current_user: User = Depends(get_current_user/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_game.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "start_game", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_game.py", "pattern": "/^def start_game(request: GameStartRequest, db: Session = Depends(get_db), current_user: User = De/", "language": "Python", "kind": "function", "signature": "(request: GameStartRequest, db: Session = Depends(get_db), current_user: User = Depends(get_current_user))"}], "hash": "e8e469f99ced9a7a3f85a89b3cdb7c11", "format-version": 4, "code-base-name": "chess_backend", "filename": "chess_backend/src/api/routers_game.py", "fields": [{"name": "INITIAL_FEN = chess.STARTING_FEN", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"19": ""}]}