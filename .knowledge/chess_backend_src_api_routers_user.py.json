{"is_source_file": true, "format": "Python", "description": "This file defines API route handlers for user-related operations in a FastAPI application, including user registration, login, profile retrieval, and leaderboard retrieval.", "external_files": ["src.api.models", "src.api.db", "src.api.security"], "external_methods": ["get_password_hash", "verify_password", "create_access_token", "decode_access_token", "get_db"], "published": ["router"], "classes": [], "methods": [{"name": "register(user: UserCreate, db: Session = Depends(get_db))", "description": "Registers a new user, ensuring username and email are unique, then adds to database.", "scope": "", "scopeKind": ""}, {"name": "login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))", "description": "Authenticates user credentials and issues a JWT token upon success.", "scope": "", "scopeKind": ""}, {"name": "get_profile(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))", "description": "Retrieves the profile information for an authenticated user based on provided token.", "scope": "", "scopeKind": ""}, {"name": "get_leaderboard(db: Session = Depends(get_db), limit: int = 10)", "description": "Returns a list of top users ordered by their ELO score.", "scope": "", "scopeKind": ""}, {"name": "authenticate_user(db: Session, username: str, password: str)", "scope": "", "scopeKind": "", "description": "unavailable"}], "calls": ["db.query(User).filter(User.username == username).first()", "verify_password(password, user.hashed_password)", "get_password_hash(user.password)", "create_access_token(data={\"sub\": user.username})", "decode_access_token(token)", "db.query(User).filter(User.username == payload.get(\"sub\")).first()", "db.query(User).order_by(User.elo.desc()).limit(limit).all()"], "search-terms": ["FastAPI user routes", "OAuth2 authentication", "User registration endpoint", "Login endpoint", "Profile retrieval", "Leaderboard"], "state": 2, "file_id": 8, "knowledge_revision": 17, "git_revision": "", "ctags": [{"_type": "tag", "name": "authenticate_user", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_user.py", "pattern": "/^def authenticate_user(db: Session, username: str, password: str):$/", "language": "Python", "kind": "function", "signature": "(db: Session, username: str, password: str)"}, {"_type": "tag", "name": "get_leaderboard", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_user.py", "pattern": "/^def get_leaderboard(db: Session = Depends(get_db), limit: int = 10):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), limit: int = 10)"}, {"_type": "tag", "name": "get_profile", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_user.py", "pattern": "/^def get_profile(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(token: str = Depends(oauth2_scheme), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "login", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_user.py", "pattern": "/^def login(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(form_data: OAuth2PasswordRequestForm = Depends(), db: Session = Depends(get_db))"}, {"_type": "tag", "name": "register", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_user.py", "pattern": "/^def register(user: UserCreate, db: Session = Depends(get_db)):$/", "language": "Python", "kind": "function", "signature": "(user: UserCreate, db: Session = Depends(get_db))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/online-chess-platform-7163-7173/chess_backend/src/api/routers_user.py", "pattern": "/^router = APIRouter($/", "language": "Python", "kind": "variable"}], "hash": "5679602533b069ce863199db26ee4531", "format-version": 4, "code-base-name": "chess_backend", "filename": "chess_backend/src/api/routers_user.py", "fields": [{"name": "router = APIRouter(", "scope": "", "scopeKind": "", "description": "unavailable"}], "revision_history": [{"17": ""}]}